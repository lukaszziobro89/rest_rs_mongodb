version: '3.6'

services:

  mongo_1:
    image: 'mongo:latest'
    container_name: mongo_1
    env_file:
      - .env
    command: --replSet rs0 --oplogSize 128
    ports:
      - "27017:27017"
    volumes:
      - ./rs1:/data/db

  mongo_2:
    image: 'mongo:latest'
    container_name: mongo_2
    command: --replSet rs0 --oplogSize 128
    env_file:
      - .env
    ports:
      - "27018:27017"
    volumes:
      - ./rs2:/data/db
    depends_on: 
      - mongo_1

  mongo_3:
    image: 'mongo:latest'
    container_name: mongo_3
    env_file:
      - .env
    command: --replSet rs0 --oplogSize 128
    ports:
      - "27019:27017"
    volumes:
      - ./rs3:/data/db
    depends_on: 
      - mongo_1

  mongo_replica_set:
    image: 'mongo:latest'
    container_name: 'mongo_replica_set'
    env_file:
      - .env
    volumes:
      - ./scripts:/scripts
    entrypoint: ["bash", "/scripts/mongo_setup.sh"]
    depends_on: 
      - mongo_1
      - mongo_2
      - mongo_3

  mongo_seed:
    image: 'mongo:latest'
    container_name: 'mongo_seed'
    env_file:
      - .env
    volumes: 
      - ./scripts/:/scripts
    entrypoint: ["bash", "/scripts/mongo_feed.sh"]
    depends_on:
     mongo_replica_set:
      condition: service_completed_successfully      

  rest_python3:
    container_name: rest_python3
    build: ./app
    env_file: 
      ./.env
    ports:
     - "${HOST_FLASK_PORT}:5000"
    volumes:
     - ./app:/app
    depends_on:
     mongo_seed:
      condition: service_completed_successfully
